// Copyright (c) 2005-2014 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef GDT_TREASURE_TABLE_IXX
#define GDT_TREASURE_TABLE_IXX

// Begin prologue.
//
//
// End prologue.

#include "shared_types.ixx"

namespace gdt
{
  // treasure_t
  // 

  inline
  const treasure_t::treasure_code_type& treasure_t::
  treasure_code () const
  {
    return this->treasure_code_.get ();
  }

  inline
  treasure_t::treasure_code_type& treasure_t::
  treasure_code ()
  {
    return this->treasure_code_.get ();
  }

  inline
  void treasure_t::
  treasure_code (const treasure_code_type& x)
  {
    this->treasure_code_.set (x);
  }

  inline
  void treasure_t::
  treasure_code (::std::unique_ptr< treasure_code_type > x)
  {
    this->treasure_code_.set (std::move (x));
  }

  inline
  const treasure_t::live_mil_sec_type& treasure_t::
  live_mil_sec () const
  {
    return this->live_mil_sec_.get ();
  }

  inline
  treasure_t::live_mil_sec_type& treasure_t::
  live_mil_sec ()
  {
    return this->live_mil_sec_.get ();
  }

  inline
  void treasure_t::
  live_mil_sec (const live_mil_sec_type& x)
  {
    this->live_mil_sec_.set (x);
  }

  inline
  const treasure_t::open_mil_sec_type& treasure_t::
  open_mil_sec () const
  {
    return this->open_mil_sec_.get ();
  }

  inline
  treasure_t::open_mil_sec_type& treasure_t::
  open_mil_sec ()
  {
    return this->open_mil_sec_.get ();
  }

  inline
  void treasure_t::
  open_mil_sec (const open_mil_sec_type& x)
  {
    this->open_mil_sec_.set (x);
  }

  inline
  const treasure_t::item_drop_id_type& treasure_t::
  item_drop_id () const
  {
    return this->item_drop_id_.get ();
  }

  inline
  treasure_t::item_drop_id_type& treasure_t::
  item_drop_id ()
  {
    return this->item_drop_id_.get ();
  }

  inline
  void treasure_t::
  item_drop_id (const item_drop_id_type& x)
  {
    this->item_drop_id_.set (x);
  }

  inline
  const treasure_t::world_drop_id_type& treasure_t::
  world_drop_id () const
  {
    return this->world_drop_id_.get ();
  }

  inline
  treasure_t::world_drop_id_type& treasure_t::
  world_drop_id ()
  {
    return this->world_drop_id_.get ();
  }

  inline
  void treasure_t::
  world_drop_id (const world_drop_id_type& x)
  {
    this->world_drop_id_.set (x);
  }

  inline
  const treasure_t::modeling_name_type& treasure_t::
  modeling_name () const
  {
    return this->modeling_name_.get ();
  }

  inline
  treasure_t::modeling_name_type& treasure_t::
  modeling_name ()
  {
    return this->modeling_name_.get ();
  }

  inline
  void treasure_t::
  modeling_name (const modeling_name_type& x)
  {
    this->modeling_name_.set (x);
  }

  inline
  void treasure_t::
  modeling_name (::std::unique_ptr< modeling_name_type > x)
  {
    this->modeling_name_.set (std::move (x));
  }

  inline
  const treasure_t::animation_name_type& treasure_t::
  animation_name () const
  {
    return this->animation_name_.get ();
  }

  inline
  treasure_t::animation_name_type& treasure_t::
  animation_name ()
  {
    return this->animation_name_.get ();
  }

  inline
  void treasure_t::
  animation_name (const animation_name_type& x)
  {
    this->animation_name_.set (x);
  }

  inline
  void treasure_t::
  animation_name (::std::unique_ptr< animation_name_type > x)
  {
    this->animation_name_.set (std::move (x));
  }

  inline
  const treasure_t::open_effect_type& treasure_t::
  open_effect () const
  {
    return this->open_effect_.get ();
  }

  inline
  treasure_t::open_effect_type& treasure_t::
  open_effect ()
  {
    return this->open_effect_.get ();
  }

  inline
  void treasure_t::
  open_effect (const open_effect_type& x)
  {
    this->open_effect_.set (x);
  }

  inline
  void treasure_t::
  open_effect (::std::unique_ptr< open_effect_type > x)
  {
    this->open_effect_.set (std::move (x));
  }

  inline
  const treasure_t::display_effect_type& treasure_t::
  display_effect () const
  {
    return this->display_effect_.get ();
  }

  inline
  treasure_t::display_effect_type& treasure_t::
  display_effect ()
  {
    return this->display_effect_.get ();
  }

  inline
  void treasure_t::
  display_effect (const display_effect_type& x)
  {
    this->display_effect_.set (x);
  }

  inline
  void treasure_t::
  display_effect (::std::unique_ptr< display_effect_type > x)
  {
    this->display_effect_.set (std::move (x));
  }


  // reward_type_t
  // 


  // treasure_table
  // 

  inline
  const treasure_table::treasure_template_sequence& treasure_table::
  treasure_template () const
  {
    return this->treasure_template_;
  }

  inline
  treasure_table::treasure_template_sequence& treasure_table::
  treasure_template ()
  {
    return this->treasure_template_;
  }

  inline
  void treasure_table::
  treasure_template (const treasure_template_sequence& s)
  {
    this->treasure_template_ = s;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // GDT_TREASURE_TABLE_IXX
